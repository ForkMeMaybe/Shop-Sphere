{
  "openapi": "3.0.0",
  "info": {
    "title": "Shop-Sphere Agent API",
    "version": "1.0.0",
    "description": "API for the Shop-Sphere AI agent to interact with the e-commerce backend."
  },
  "servers": [
    {
      "url": "https://shop-sphere-app.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/store/list-products/": {
      "get": {
        "summary": "List Products",
        "description": "Retrieves a list of products. Can be filtered by collection, and searched by title or description, and price range.",
        "operationId": "list_products",
        "parameters": [
          {
            "name": "collection_id",
            "in": "query",
            "description": "Filter by collection ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for a term in the product title and description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Order by unit_price or last_update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit_price__gt",
            "in": "query",
            "description": "Minimum unit price for filtering products",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "unit_price__lt",
            "in": "query",
            "description": "Maximum unit price for filtering products",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products."
          }
        }
      }
    },
    "/store/list-products/{id}/": {
      "get": {
        "summary": "Get Product Details",
        "description": "Retrieves the details of a specific product.",
        "operationId": "get_product_details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the product to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details."
          }
        }
      }
    },
    "/store/collections/": {
      "get": {
        "summary": "List Collections",
        "description": "Retrieves a list of product collections. Can be searched by title.",
        "operationId": "list_collections",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search for a term in the collection title",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of collections."
          }
        }
      }
    },
    "/store/carts/": {
      "post": {
        "summary": "Create a Cart",
        "description": "Creates a new shopping cart.",
        "operationId": "create_cart",
        "responses": {
          "201": {
            "description": "Cart created."
          }
        }
      }
    },
    "/store/carts/{cart_id}/": {
      "get": {
        "summary": "Get Cart Details",
        "description": "Retrieves the contents of a shopping cart.",
        "operationId": "get_cart_details",
        "parameters": [
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "description": "The UUID of the cart. This value must be substituted directly into the URL path, e.g., /store/carts/a1b2c3d4-e5f6-7890-1234-567890abcdef/.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart details."
          }
        }
      }
    },
    "/store/carts/{cart_id}/items/": {
      "post": {
        "summary": "Add Item to Cart",
        "description": "Adds a product to a shopping cart. The cart_id must be substituted directly into the URL path, e.g., /store/carts/a1b2c3d4-e5f6-7890-1234-567890abcdef/items/. The request body must be JSON with 'product_id' (integer) and 'quantity' (integer), e.g., { \"product_id\": 1, \"quantity\": 2 }.",
        "operationId": "add_item_to_cart",
        "parameters": [
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "description": "The UUID of the cart. This value must be substituted directly into the URL path.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "The ID of the product to add"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The number of items to add"
                  }
                },
                "required": ["product_id", "quantity"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item added to cart."
          }
        }
      }
    },
    "/store/carts/{cart_id}/items/{item_id}/": {
      "patch": {
        "summary": "Update Cart Item Quantity",
        "description": "Updates the quantity of a specific item in the shopping cart. The cart_id and item_id must be substituted directly into the URL path, e.g., /store/carts/a1b2c3d4-e5f6-7890-1234-567890abcdef/items/123/. The request body must be JSON with 'quantity' (integer), e.g., { \"quantity\": 5 }.",
        "operationId": "update_cart_item",
        "parameters": [
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "description": "The UUID of the cart. This value must be substituted directly into the URL path.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "The ID of the cart item to update. This value must be substituted directly into the URL path.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "The new quantity for the cart item"
                  }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item quantity updated."
          }
        }
      },
      "delete": {
        "summary": "Remove Cart Item",
        "description": "Removes a specific item from the shopping cart. The cart_id and item_id must be substituted directly into the URL path, e.g., /store/carts/a1b2c3d4-e5f6-7890-1234-567890abcdef/items/123/.",
        "operationId": "remove_cart_item",
        "parameters": [
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "description": "The UUID of the cart. This value must be substituted directly into the URL path.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "The ID of the cart item to remove. This value must be substituted directly into the URL path.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cart item removed."
          }
        }
      }
    },
    "/store/orders/": {
      "get": {
        "summary": "List Orders",
        "description": "Retrieves a list of the user's orders.",
        "operationId": "list_orders",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of orders."
          }
        }
      },
      "post": {
        "summary": "Place an Order",
        "description": "Creates an order from a shopping cart.",
        "operationId": "place_order",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cart_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the cart to create the order from"
                  }
                },
                "required": ["cart_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order placed."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
